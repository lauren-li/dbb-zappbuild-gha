name: zowe-test
## Notes:
# A sample zOS DBB workflow
# Global vars
env:
  # a var with a valid SSH acct on Z. With pre-gen'd and tested keys in the runner.
  Zowe_RSE_Prefix: 'zowe rse issue uss'
  Zowe_RSE_WorkDir: '/u/laurenl'
  
  # scripts on z/OS (SSH user's Home Dir in Unix - USS). See SSH scripting Doc
  # HERE
  Echo: 'ibm/echo.sh'
  Clone: 'ibm/git-clone-https.sh'
  DBB_Build: 'ibm/dbb-build-test.sh'
  Download_Logs: 'ibm/download-logs.sh'

# "on" trigger to manually start this workflow. Can add "pull, push..." for auto trigger.
# see https://docs.github.com/en/actions/learn-github-actions/contexts
on: workflow_dispatch

jobs:
  DBB_Build_on_zOS:
    runs-on: self-hosted
    outputs:
      buildLogsLocation: ${{ steps.prepare_logs.outputs.buildLogsLocation }}
    env:
      # Project related vars
      MyRepoHttps: ${{ github.server_url }}/${{ github.repository }}.git
      MyWorkDir: tmp/ghActions/dbb-zappbuild-gha_run_${{ github.run_number }}
      createBuildOutputSubfolder: true # build.properties property Default: true
      MyWorkSpace: /u/laurenl/dbb-zappbuild-gha/samples
      MyApplication: MortgageApplication
      MyHlq: LAURENL.ZAPP.CLEAN.MASTER
      MyBranch: ${{ github.ref }}
        
    steps:
      - name: echo
        run: ${{ env.Zowe_RSE_Prefix }} "${{ env.Echo }} ${{ env.MyRepoHttps }}" --cwd "${{ env.Zowe_RSE_WorkDir}}"
        
      - id: clone
        name: Clone repository
        run: ${{ env.Zowe_RSE_Prefix }} "${{ env.Clone }} ${{ env.MyRepoHttps }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyBranch }}" --cwd "${{ env.Zowe_RSE_WorkDir}}"

#       - name: DBB_Impact_Build
#         run: ${{ env.Zowe_RSE_Prefix }} "${{ env.DBB_Build }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyApplication }} ${{ env.MyHlq }} --impactBuild" --cwd "${{ env.Zowe_RSE_WorkDir}}"

      - id: dbb_full_build
        name: DBB Full Build
        run: ${{ env.Zowe_RSE_Prefix }} "${{ env.DBB_Build }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyApplication }} ${{ env.MyHlq }} --fullBuild" --cwd "${{ env.Zowe_RSE_WorkDir}}"

      - id: prepare_logs
        name: Prepare Logs
        run: echo "::set-output name=buildLogsLocation::$(zowe rse issue uss '${{ env.MyWorkDir }}' --cwd '${{ env.Zowe_RSE_WorkDir}}')"
        
      - id: download_logs
        name: Download Logs
        run: echo ${{ needs.DBB_Build_on_zOS.outputs.buildLogsLocation }}
#         run: zowe rse download uss-file "${{ env.MyWorkDir }}" --cwd "${{ env.Zowe_RSE_WorkDir}}"
