name: Demo-DBB_Build_on_ZOS_With_GitHub_Actions
## Notes:
# A sample zOS DBB workflow

# Global vars
env:
  # a var with a valid SSH acct on Z. With pre-gen'd and tested keys in the runner.  
  DBB_Host: 'ssh laurenl@10.3.20.201'
  # scripts on z/OS (SSH user's Home Dir in Unix - USS). See SSH scripting Doc
  # HERE
  Echo: 'ibm/echo.sh'
  Clone: 'ibm/git-clone.sh'
  DBB_Build: 'ibm/dbb-build-test.sh'
  Prepare_Logs: 'ibm/prepare-logs.sh'       # Script to gather build log files into a single archive file

# "on" trigger to manually start this workflow. Can add "pull, push..." for auto trigger.
# see https://docs.github.com/en/actions/learn-github-actions/contexts
on: workflow_dispatch

jobs:
  DBB_Build_on_zOS:
    runs-on: self-hosted
    env:
      # Project related vars
      MyRepo: git@github.com:${{ github.repository }}.git
      MyWorkDir: tmp/ghActions/ghAction-poc-workspace_run_${{ github.run_number }}
      MyWorkSpace: /u/laurenl/dbb-zappbuild-gha/samples   # Absolute z/OS UNIX path to workspace (root) directory containing all required source directories
      MyBranch: ${{ github.ref }}
      MyApplication: MortgageApplication                  # Application directory name (relative to MyWorkSpace)
      MyHlq: LAURENL.ZAPP.CLEAN.MASTER                    # High level qualifier for partitioned data sets
      
    steps:
      - name: Echo
        run: ${{ env.DBB_Host }} ${{ env.Echo }} ${{ env.MyRepo }}
        
      - name: Clone
        run: ${{ env.DBB_Host }} ${{ env.Clone }} ${{ env.MyRepo }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyBranch }}
    
      # - name: DBB_Impact_Build
      #   run: ${{ env.DBB_Host }} ${{ env.DBB_Build }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ghAction-poc-app --impactBuild

      - name: DBB_Full_Build
        run: ${{ env.DBB_Build }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyApplication }} ${{ env.MyHlq }} --fullBuild

      - name: Ensure logs subdirectory exists on GHA runner  # Create new logs subdirectory (if not already existing) in GHA runner's working directory, to be used for next step.
        # Below is a PowerShell command. For bash, it can be replaced with: mkdir -p ${{ env.RunnerLogDir }}
        run: New-Item ${{ env.RunnerLogDir }} -ItemType directory -Force

  Upload_Logs_to_GitHub:
    needs: DBB_Build_on_zOS
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ${{ env.RunnerLogDir }}  # Use logs subdirectory created in previous job to run the next steps.

    steps:
      - id: prepare_logs
        name: Prepare Logs  # Package build logs on z/OS as tar file, and pass filename back to GHA runner.
        run: echo "buildLogFileName=${{ env.DBB_Host }} ${{ env.Prepare_Logs }} ${{ env.MyWorkDir }}" >> $ENV:GITHUB_OUTPUT

      - name: Download Logs from z/OS UNIX to GHA runner
        run: zowe files download uf "${{ env.Zowe_RSE_CommandWorkingDir}}/${{ env.MyWorkDir }}/${{ steps.prepare_logs.outputs.buildLogFileName }}" -b

      - id: get_basename
        name: Get basename  # Get artifact name without extension. (This is also the default build log directory name if the following untar step is run. )
        run: echo "runnerBuildLogBaseName=$((Get-Item ${{ steps.prepare_logs.outputs.buildLogFileName }}).Basename)" >> $ENV:GITHUB_OUTPUT

      # If uploading directory instead of tarfile: Uncomment the below untar step. (It will upload as a zip file on GitHub.)
      # - name: Untar file on GHA runner
      #   run: tar -xvf ${{ steps.prepare_logs.outputs.buildLogFileName }}

      - name: Upload Logs from GHA runner to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get_basename.outputs.runnerBuildLogBaseName }}                          # Name used for artifact when it is uploaded
          path: ${{ env.RunnerLogDir }}/${{ steps.prepare_logs.outputs.buildLogFileName }}        # Path to tarfile artifact
          # path: ${{ env.RunnerLogDir }}/${{ steps.get_basename.outputs.runnerBuildLogBaseName }}  # If uploading directory instead of tarfile: Use this path instead.

